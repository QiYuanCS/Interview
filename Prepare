C语言实现：有一个指针指向字符串首地址，字符串由一堆数字组成，数字之间用逗号隔开，用一种最快的方法将最大的数与第一个数交换，最小的数与最后一个数交换。（注意数字可能不止一位）

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

// Function to swap two integers
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

// Function to find the maximum and minimum in an array and swap values
void processString(char *str) {
    int numbers[100]; // Assuming the string has at most 100 numbers
    int count = 0;    // Count of numbers in the array
    
    // Parse the string into numbers
    char *token = strtok(str, ",");
    while (token != NULL) {
        numbers[count++] = atoi(token); // Convert string to integer
        token = strtok(NULL, ",");
    }

    // Find the indices of the maximum and minimum values
    int maxIdx = 0, minIdx = 0;
    for (int i = 1; i < count; i++) {
        if (numbers[i] > numbers[maxIdx]) {
            maxIdx = i;
        }
        if (numbers[i] < numbers[minIdx]) {
            minIdx = i;
        }
    }

    // Swap the maximum with the first element
    if (maxIdx != 0) {
        swap(&numbers[0], &numbers[maxIdx]);
    }

    // Swap the minimum with the last element
    if (minIdx != count - 1) {
        swap(&numbers[count - 1], &numbers[minIdx]);
    }

    // Reconstruct the string
    printf("Processed string: ");
    for (int i = 0; i < count; i++) {
        if (i > 0) {
            printf(",");
        }
        printf("%d", numbers[i]);
    }
    printf("\n");
}

// Main function to test the implementation
int main() {
    char input[] = "3,5,1,9,2"; // Example input
    printf("Original string: %s\n", input);

    processString(input);

    return 0;
}
